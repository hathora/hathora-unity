/*
 * Hathora Cloud API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Hathora.Cloud.Sdk.Client.OpenAPIDateConverter;

namespace Hathora.Cloud.Sdk.Model
{
    /// <summary>
    /// CreateAppRequestAuthConfiguration
    /// </summary>
    [DataContract(Name = "CreateApp_request_authConfiguration")]
    public partial class CreateAppRequestAuthConfiguration : IEquatable<CreateAppRequestAuthConfiguration>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateAppRequestAuthConfiguration" /> class.
        /// </summary>
        /// <param name="google">google.</param>
        /// <param name="nickname">Construct a type with a set of properties K of type T.</param>
        /// <param name="anonymous">Construct a type with a set of properties K of type T.</param>
        public CreateAppRequestAuthConfiguration(CreateAppRequestAuthConfigurationGoogle google = default(CreateAppRequestAuthConfigurationGoogle), Object nickname = default(Object), Object anonymous = default(Object))
        {
            this.Google = google;
            this.Nickname = nickname;
            this.Anonymous = anonymous;
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets Google
        /// </summary>
        [DataMember(Name = "google", EmitDefaultValue = false)]
        public CreateAppRequestAuthConfigurationGoogle Google { get; set; }

        /// <summary>
        /// Construct a type with a set of properties K of type T
        /// </summary>
        /// <value>Construct a type with a set of properties K of type T</value>
        [DataMember(Name = "nickname", EmitDefaultValue = false)]
        public Object Nickname { get; set; }

        /// <summary>
        /// Construct a type with a set of properties K of type T
        /// </summary>
        /// <value>Construct a type with a set of properties K of type T</value>
        [DataMember(Name = "anonymous", EmitDefaultValue = false)]
        public Object Anonymous { get; set; }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateAppRequestAuthConfiguration {\n");
            sb.Append("  Google: ").Append(Google).Append("\n");
            sb.Append("  Nickname: ").Append(Nickname).Append("\n");
            sb.Append("  Anonymous: ").Append(Anonymous).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateAppRequestAuthConfiguration);
        }

        /// <summary>
        /// Returns true if CreateAppRequestAuthConfiguration instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateAppRequestAuthConfiguration to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateAppRequestAuthConfiguration input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Google == input.Google ||
                    (this.Google != null &&
                    this.Google.Equals(input.Google))
                ) && 
                (
                    this.Nickname == input.Nickname ||
                    (this.Nickname != null &&
                    this.Nickname.Equals(input.Nickname))
                ) && 
                (
                    this.Anonymous == input.Anonymous ||
                    (this.Anonymous != null &&
                    this.Anonymous.Equals(input.Anonymous))
                )
                && (this.AdditionalProperties.Count == input.AdditionalProperties.Count && !this.AdditionalProperties.Except(input.AdditionalProperties).Any());
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Google != null)
                {
                    hashCode = (hashCode * 59) + this.Google.GetHashCode();
                }
                if (this.Nickname != null)
                {
                    hashCode = (hashCode * 59) + this.Nickname.GetHashCode();
                }
                if (this.Anonymous != null)
                {
                    hashCode = (hashCode * 59) + this.Anonymous.GetHashCode();
                }
                if (this.AdditionalProperties != null)
                {
                    hashCode = (hashCode * 59) + this.AdditionalProperties.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
